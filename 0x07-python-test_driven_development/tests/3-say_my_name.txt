The ``3-say_my_name`` module
============================

Using ``say_my_name``
---------------------

Importing function from the module:

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Passing first_name and last_name correctly:

    >>> say_my_name("Mol", "Halawiyat")
    My name is Mol Halawiyat

Passing first_name only:

    >>> say_my_name("Solo")
    My name is Solo

Passing None as the last_name:

    >>> say_my_name("Leveling", None)
    Traceback (most recent call last):
              ...
    TypeError: last_name must be a string

Passing None as the first_name:

    >>> say_my_name(None)
    Traceback (most recent call last):
              ...
    TypeError: first_name must be a string

Passing a number as the first_name:

    >>> say_my_name(1)
    Traceback (most recent call last):
              ...
    TypeError: first_name must be a string

Passing a number as the last_name:

    >>> say_my_name("Mol", 0)
    Traceback (most recent call last):
              ...
    TypeError: last_name must be a string

Missing two arguments:

    >>> say_my_name()
    Traceback (most recent call last):
              ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Passing an empty string as the first_name:

    >>> say_my_name("", "Mol")
    My name is  Mol

Passing an empty string as the last_name:

    >>> say_my_name("Mol", "")
    My name is Mol

Both arguments are empty strings:

    >>> say_my_name("", "")
    My name is 

Both arguments are None:

    >>> say_my_name(None, None)
    Traceback (most recent call last):
              ...
    TypeError: first_name must be a string

Non-string datatypes for both first_name and last_name:

    >>> say_my_name(100, 200)
    Traceback (most recent call last):
              ...
    TypeError: first_name must be a string
